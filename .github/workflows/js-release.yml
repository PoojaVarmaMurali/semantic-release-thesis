name: Semantic Release

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write  # Required by semantic-release to push tags/releases
  id-token: write  # Required by semantic-release to create GitHub releases


jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: js-service/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./js-service

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check if tag already exists
        run: |
          # Check if a Git tag corresponding to the version in package.json already exists
          if ! command -v jq >/dev/null; then
              echo "Error: jq is not installed. Please install jq before proceeding."
              exit 1
          fi

          if [ ! -f js-service/package.json ]; then
              echo "Error: package.json file is missing in the js-service directory."
              OUTPUT=$(npx semantic-release --dry-run 2>&1)
              if echo "$OUTPUT" | grep -q "Error"; then
                echo "Semantic-release encountered an error:"
                echo "$OUTPUT"
                exit 1
              fi
              NEXT_VERSION=$(echo "$OUTPUT" | grep "next release version is" | awk '{print $NF}')
          fi

          if ! jq -e .version js-service/package.json >/dev/null 2>&1; then
              echo "Error: package.json is malformed or missing the 'version' field."
              exit 1
          fi

          if git rev-parse "js-v$(jq -r .version js-service/package.json)" >/dev/null 2>&1; then
              NEXT_VERSION=$(npx semantic-release --dry-run --debug | jq -r '.nextRelease.version')
              exit 0
          fi

      - name: Prevent re-tag if version already exists
        run: |
              NEXT_VERSION=$(npx semantic-release --dry-run | grep "next release version is" | awk '{print $NF}')
              TAG="js-v$NEXT_VERSION"
              if git rev-parse "$TAG" >/dev/null 2>&1; then
                echo "Tag $TAG already exists. Skipping release."
                exit 0
              fi

      - name: Semantic Release
        run: npx semantic-release
        working-directory: ./js-service
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        

          