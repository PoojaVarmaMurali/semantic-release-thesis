name: Python Semantic Release

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'python-service/**'
      - '.github/workflows/python-release.yml'
      - 'README.md'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dev dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
        working-directory: ./python-service


      - name: Show current branch
        env:
          CURRENT_BRANCH: ${{ github.ref_name }}
        run: |
          echo "Current branch: ${{ env.CURRENT_BRANCH }}"


    # Dry-run only if develop branch AND version bump is detected      
      - name: Detect version bump on develop
        if: github.ref_name == 'develop'
        id: py_version_check
        run: |
          ln -s ../.git .git
          VERSION=$(npx semantic-release --dry-run | grep -oP 'next release version is \K.*' || echo "none")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        working-directory: ./python-service
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Skip changelog (develop, no bump)
        if: github.ref_name == 'develop' && steps.py_version_check.outputs.VERSION == 'none'
        run: echo "No version bump detected â€” skipping changelog."  

      - name: Generate changelog on develop (if needed)
        if: github.ref_name == 'develop' && steps.py_version_check.outputs.VERSION != 'none'
        run: npx semantic-release
        working-directory: ./python-service
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Full release on main
        if: github.ref_name == 'main'
        run: |
          echo "Running full semantic release on main"
          ln -s ../.git .git
          npx semantic-release
        working-directory: ./python-service
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
